{"version":3,"sources":["components/Container/index.js","components/Container/Container.js","components/Input/index.js","components/Input/Input.js","components/Button/index.js","components/Button/Button.js","components/Navbar/index.js","components/Navbar/Navbar.js","redux/actionTypes.js","redux/actions/login.js","screen/Login.js","components/RTCVideo/RTCVideo.js","lib/meetPeer.js","lib/messageHandler.js","lib/meetSocket.js","components/meet/meet.js","components/meet/index.js","screen/Home.js","Navigator.js","redux/reducers/user.js","redux/reducers/index.js","redux/Store.js","App.js","serviceWorker.js","index.js"],"names":["Container","props","className","children","Input","forwardRef","ref","console","log","label","containerClass","inputProps","innerRef","Button","buttonProps","Navbar","brandName","onClick","onBrandPress","keyMirror","LOGIN_REQUEST_SUCCESS","LOGOUT","login","name","dispatch","payload","type","actionTypes","logout","Login","useDispatch","nameDOM","useRef","serverLoc","useState","msg","setMsg","validate","url","a","fetch","response","json","userName","placeholder","value","current","RTCVideo","username","autoPlay","playsInline","RTCVideoWithRef","configuration","iceServers","urls","rtpConfig","optional","RtpDataChannels","MeetPeer","ms","id","onicecandidate","e","callState","candidate","send","peerName","peerId","event","data","configureDataChannel","this","dataChannel","createDataChannel","reliable","onerror","error","onmessage","onclose","JSON","stringify","createOffer","then","offer","setLocalDescription","catch","onError","setRemoteDescription","createAnswer","answer","addIceCandidate","RTCIceCandidate","RTCSessionDescription","RTCPeerConnection","handlePing","content","message","handleOffer","mp","handleCandidate","handleAnswer","MessageHandler","parse","MeetSocket","address","isSecure","contextPath","port","getProtocol","getPort","getContextPath","path","location","onopen","readyState","OPEN","Math","floor","random","WebSocket","Meet","conn","setConn","setMp","useSelector","state","user","rVideo","useEffect","localVideo","getTracks","forEach","track","addTrack","ontrack","srcObject","streams","meetPeer","addMp","live","sendOffer","con","MeetWithRef","mediaStreamConstraints","video","audio","Home","stream","webcamLive","toggleWebcam","offerLive","toggleOffer","locVideo","setLocVideo","connectWebcam","navigator","mediaDevices","getUserMedia","Navigator","loggedIn","initialState","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Store","createStore","applyMiddleware","thunk","Persistor","persistStore","App","store","loading","persistor","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c3a37b2.chunk.js","sourcesContent":["import Container from './Container';\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n\r\nconst Container = (props) => (\r\n  <div className={`container-fluid ${props.className}`}>{props.children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import Input from './Input';\r\n\r\nexport default Input;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  console.log(\"props\", props);\r\n  const { label, containerClass, innerRef, ...inputProps } = props;\r\n  return (\r\n    <div className={containerClass}>\r\n      <label>{label}</label>\r\n      <div className=\"input-group\">\r\n        <input ref={ref} className=\"form-control\" {...inputProps} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Button = (props) => {\r\n  const { children, ...buttonProps } = props;\r\n\r\n  return (\r\n    <button {...buttonProps}>\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Navbar from './Navbar';\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Navbar = (props) => {\r\n  const { brandName = \"\" } = props;\r\n\r\n  const handleBrandPress = () => {\r\n    if (props.onBrandPress) {\r\n      props.onBrandPress();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      {brandName && (\r\n        <div className=\"navbar-brand\" onClick={handleBrandPress}>\r\n          {props.brandName}\r\n        </div>\r\n      )}\r\n      {props.children}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import keyMirror from \"keymirror\";\r\n\r\nexport default keyMirror({\r\n  LOGIN_REQUEST_SUCCESS: null,\r\n  LOGOUT: null,\r\n});\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nconst loginRequestSuccess = (payload) => ({\r\n  type: actionTypes.LOGIN_REQUEST_SUCCESS,\r\n  payload,\r\n});\r\n\r\nconst logoutRequest = () => ({\r\n  type: actionTypes.LOGOUT,\r\n});\r\n\r\nexport const login = (name) => (dispatch) => {\r\n  dispatch(loginRequestSuccess({ name }));\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(logoutRequest());\r\n};\r\n","import React, { useRef ,useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// components\r\nimport Container from \"../components/Container\";\r\nimport Input from \"../components/Input\";\r\nimport Button from \"../components/Button\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\n// redux\r\nimport { login } from \"../redux/actions/login\";\r\n\r\n\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const nameDOM = useRef();\r\n  const serverLoc = useRef();\r\n  const [msg,setMsg] = useState(null);\r\n\r\n  const handleLogin = () => {\r\n    if(!serverLoc.current.value){\r\n      console.log(\"enter the server url to proceed!\");\r\n      return;\r\n    }\r\n    let name = nameDOM.current.value;\r\n\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    validate(serverLoc.current.value+\"/user/authenticate/\",name);\r\n     \r\n    \r\n  };\r\n\r\n  const validate = async (url,name) =>{\r\n   const response = await fetch(url+name);\r\n   const json = await response.json();\r\n  //  console.log(json);\r\n   if(json.userName === \"Unauthorized\"){\r\n    console.log(\"Unauthorized user\");\r\n    setMsg(\"user not found !\");\r\n     return;\r\n   }\r\n   if(json.userName === name){\r\n     console.log(\"Aauthorized user : \"+name);\r\n     dispatch(login(name));\r\n   }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar brandName=\"Login to chat room\" />\r\n      <Container className=\"p-4\">\r\n        <h1>{msg}</h1>\r\n        <Input\r\n          ref={nameDOM}\r\n          label=\"Name\"\r\n          containerClass=\"mb-3\"\r\n          placeholder=\"Enter name\"\r\n        />\r\n        <ol> <b>UserName Eamples</b>\r\n          <li>\r\n            sanjai\r\n          </li>\r\n          <li>\r\n            navin\r\n          </li>\r\n        </ol>\r\n        <Input\r\n          ref={serverLoc}\r\n          label=\"ServerUrl\"\r\n          containerClass=\"mb-3\"\r\n          placeholder=\"Enter Server Url\"\r\n          value=\"https://meet-v1.herokuapp.com/\"\r\n        />\r\n        <Button onClick={handleLogin} className=\"btn btn-primary\">\r\n          Login to room\r\n        </Button>\r\n\r\n        \r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nimport \"./RTCVideo.css\";\r\n\r\nconst RTCVideo = (props) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">{props.username}</div>\r\n      <div className=\"card-body\">\r\n        <video className=\"video\" ref={props.innerRef} autoPlay playsInline />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RTCVideoWithRef = forwardRef((props, ref) => (\r\n  <RTCVideo innerRef={ref} {...props} />\r\n));\r\n\r\nexport default RTCVideoWithRef;\r\n","const configuration = {\r\n  iceServers: [\r\n    {\r\n      urls: [\"stun:stun.l.google.com:19302\"],\r\n    },\r\n  ],\r\n};\r\n\r\nconst rtpConfig = {\r\n  optional: [\r\n    {\r\n      RtpDataChannels: true,\r\n    },\r\n  ],\r\n};\r\n\r\nclass MeetPeer extends RTCPeerConnection {\r\n  constructor(ms, name = null, id = null) {\r\n    super(configuration, rtpConfig);\r\n    this.ms = ms;\r\n    this.peerName = name;\r\n    this.peerId = id;\r\n    this.configureDataChannel();\r\n    console.log(name + \" peer started\");\r\n  }\r\n\r\n  configureDataChannel() {\r\n    this.dataChannel = this.createDataChannel(\"dataChannel\", {\r\n      reliable: true,\r\n    });\r\n\r\n    this.dataChannel.onerror = function (error) {\r\n      console.log(\"Error occured on datachannel:\", error);\r\n    };\r\n\r\n    // when we receive a message from the other peer, printing it on the console\r\n    this.dataChannel.onmessage = function (event) {\r\n      console.log(\"message:\", event);\r\n      // handleMessage(event.data);\r\n    };\r\n\r\n    this.dataChannel.onclose = function () {\r\n      console.log(\"data channel is closed\");\r\n    };\r\n\r\n    this.callState = false;\r\n  }\r\n\r\n  setUserName(name) {\r\n    this.peerName = name;\r\n  }\r\n\r\n  sendMessage(msg) {\r\n    console.log(\"Messaging via data channel\");\r\n    this.dataChannel.send(JSON.stringify(msg));\r\n  }\r\n\r\n  sendOffer() {\r\n    this.createOffer()\r\n      .then((offer) => {\r\n        this.setLocalDescription(offer);\r\n\r\n        this.ms.send({\r\n          peerName: this.peerName,\r\n          peerId: this.peerId,\r\n          event: \"offer\",\r\n          data: offer,\r\n        });\r\n      })\r\n      .catch((e) => this.onError(e));\r\n  }\r\n\r\n  onicecandidate = (e) => {\r\n    if (this.callState) {\r\n      if (e.candidate) {\r\n        this.ms.send({\r\n          peerName: this.peerName,\r\n          peerId: this.peerId,\r\n          event: \"candidate\",\r\n          data: e.candidate,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleOffer(offer) {\r\n    this.setRemoteDescription(offer);\r\n    this.createAnswer()\r\n      .then((answer) => {\r\n        this.setLocalDescription(answer);\r\n        this.ms.send({\r\n          peerName: this.peerName,\r\n          peerId: this.peerId,\r\n          event: \"answer\",\r\n          data: answer,\r\n        });\r\n      })\r\n      .catch((e) => this.onError(e));\r\n  }\r\n\r\n  handleCandidate(candidate) {\r\n    this.addIceCandidate(new RTCIceCandidate(candidate));\r\n    console.log(\"Candidate received\");\r\n  }\r\n\r\n  handleAnswer(answer) {\r\n    this.setRemoteDescription(new RTCSessionDescription(answer));\r\n    this.callState = true;\r\n    console.log(\"connection established successfully!!\");\r\n  }\r\n\r\n  onError(error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport default MeetPeer;\r\n","const MessageHandler = (msg, ms) => {\r\n  const content = JSON.parse(msg.data);\r\n  //console.log(msg);\r\n  // console.log(\"<---- remote ---->\");\r\n  // console.log(content);\r\n  // console.log(\"<---- remote ---->\");\r\n  const data = content.data;\r\n  switch (content.event) {\r\n    // when somebody wants to call us\r\n    case \"offer\":\r\n      handleOffer(content, ms);\r\n      break;\r\n    case \"answer\":\r\n      handleAnswer(data, ms);\r\n      break;\r\n    // when a remote peer sends an ice candidate to us\r\n    case \"candidate\":\r\n      handleCandidate(data, ms);\r\n      break;\r\n    case \"ping\":\r\n      handlePing(content, ms);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nconst handlePing = (content, ms) => {\r\n  console.log(\r\n    \"received a ping from \" +\r\n      content.peerName +\r\n      \" with the message \" +\r\n      content.data.message\r\n  );\r\n};\r\nconst handleOffer = (content, ms) => {\r\n  console.log(\"received offer\");\r\n  ms.mp.handleOffer(content.data);\r\n};\r\n\r\nconst handleCandidate = (candidate, ms) => {\r\n  console.log(\"received iceCandidate\");\r\n  ms.mp.handleCandidate(candidate);\r\n};\r\n\r\nconst handleAnswer = (answer, ms) => {\r\n  console.log(\"received answer\");\r\n  ms.mp.handleAnswer(answer);\r\n};\r\n\r\nexport default MessageHandler;\r\n","import MessageHandler from \"./messageHandler\";\r\n\r\nclass MeetSocket extends WebSocket {\r\n  constructor(address, isSecure = null, contextPath = null, port = null) {\r\n    const getProtocol = (isSecure) => {\r\n      if (!!isSecure) {\r\n        return isSecure ? \"wss://\" : \"ws://\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n\r\n    const getPort = (port) => {\r\n      return port ? \":\" + port : \"\";\r\n    };\r\n    const getContextPath = (path) => {\r\n      return !!contextPath ? \"/\" + path : \"/\";\r\n    };\r\n    const location =\r\n      getProtocol(isSecure) +\r\n      address +\r\n      getPort(port) +\r\n      getContextPath(contextPath);\r\n\r\n    super(location);\r\n    \r\n    this.id = Math.floor(Math.random() * 2) + 1;\r\n    // this.state = this.CONNECTING;\r\n    //    console.log(this.CONNECTING);\r\n  }\r\n\r\n  addMp(mp) {\r\n    this.mp = mp;\r\n  }\r\n\r\n  onopen = () => {\r\n    console.log(\"Connected to the signaling server at \" + this.url);\r\n    this.send({\r\n      peerName: this.userName,\r\n      peerId: this.id,\r\n      event: \"ping\",\r\n      data: {\r\n        message: \"hello\",\r\n      },\r\n    });\r\n  };\r\n\r\n  onmessage = (msg) => {\r\n    MessageHandler(msg, this);\r\n  };\r\n\r\n  send = (message) => {\r\n    if (this.readyState === this.OPEN) {\r\n      // console.log(\"<---- local ---->  \");\r\n      // console.log(message);\r\n      // console.log(\"<---- local ---->  \");\r\n      super.send(JSON.stringify(message));\r\n    } else {\r\n      console.log(\"can't send message : \" + message);\r\n    }\r\n  };\r\n\r\n  onclose = () => {\r\n    console.log(\"closing\");\r\n  };\r\n}\r\n\r\nexport default MeetSocket;\r\n","import React, { useEffect, useState, forwardRef, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RTCVideo } from \"../RTCVideo\";\r\n\r\nimport { MeetPeer, MeetSocket } from \"../../lib\";\r\n\r\nconst Meet = (props) => {\r\n  const [conn, setConn] = useState(null);\r\n  const [mp, setMp] = useState(null);\r\n  const userName = useSelector((state) => state.user.name);\r\n  const rVideo = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!!props.localVideo && !!mp) {\r\n      props.localVideo\r\n        .getTracks()\r\n        .forEach((track) => mp.addTrack(track, props.localVideo));\r\n    }\r\n\r\n    if (!!mp) {\r\n      mp.ontrack = (e) => {\r\n        if (rVideo.current) {\r\n          rVideo.current.srcObject = e.streams[0];\r\n        }\r\n      };\r\n    }\r\n  }, [props.localVideo, mp]);\r\n\r\n  useEffect(() => {\r\n    if (conn === null) {\r\n      const con = new MeetSocket(\"meet-v1.herokuapp.com\", true, \"socket\");\r\n      setConn(con);\r\n      return;\r\n    }\r\n    if (!!conn && mp === null && !!userName) {\r\n      const meetPeer = new MeetPeer(conn, userName);\r\n      setMp(meetPeer);\r\n      conn.addMp(meetPeer);\r\n      return;\r\n    }\r\n    if (props.live && !!mp) {\r\n      mp.sendOffer();\r\n      return;\r\n    }\r\n  }, [props.live, userName, conn, mp]);\r\n\r\n  return <>{props.live && <RTCVideo ref={rVideo} username={userName} />}</>;\r\n};\r\n\r\nconst MeetWithRef = forwardRef((props, ref) => (\r\n  <Meet localVideo={ref} {...props} />\r\n));\r\n\r\nexport default MeetWithRef;\r\n","import MeetWithRef from \"./meet\";\r\n\r\n\r\nexport default MeetWithRef;","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// components\r\nimport { RTCVideo } from \"../components/RTCVideo\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Container from \"../components/Container\";\r\nimport Button from \"../components/Button\";\r\nimport Meet from \"../components/meet\";\r\n\r\n// redux\r\nimport { logout } from \"../redux/actions/login\";\r\n\r\nconst mediaStreamConstraints = {\r\n  video: true,\r\n  audio: true,\r\n};\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [webcamLive, toggleWebcam] = useState(false);\r\n  const [offerLive, toggleOffer] = useState(false);\r\n\r\n  const name = useSelector((state) => state.user.name);\r\n\r\n  const localVideo = useRef(null);\r\n  const [locVideo, setLocVideo] = useState(null);\r\n\r\n  let stream;\r\n\r\n  const connectWebcam = async () => {\r\n    try {\r\n      toggleWebcam(true);\r\n\r\n      stream = await navigator.mediaDevices.getUserMedia(\r\n        mediaStreamConstraints\r\n      );\r\n\r\n      localVideo.current.srcObject = stream;\r\n      setLocVideo(stream);\r\n    } catch (err) {\r\n      toggleWebcam(false);\r\n    }\r\n  };\r\n\r\n  const disconnectWebcam = () => {\r\n    const stream = localVideo.current.srcObject;\r\n\r\n    if (!stream) {\r\n      return;\r\n    }\r\n\r\n    const tracks = stream.getTracks();\r\n\r\n    tracks.forEach((track) => track.stop());\r\n\r\n    localVideo.current.srcObject = null;\r\n    setLocVideo(null);\r\n\r\n    toggleWebcam(false);\r\n  };\r\n\r\n  const handleWebcamToggle = async () => {\r\n    if (webcamLive) {\r\n      disconnectWebcam();\r\n      return;\r\n    }\r\n\r\n    await connectWebcam();\r\n  };\r\n\r\n  const handleOffer = () => {\r\n    if (offerLive) {\r\n      toggleOffer(false);\r\n    } else {\r\n      toggleOffer(true);\r\n    }\r\n    return;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWebcam();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar brandName=\"Realtime Communcation with WebRTC\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <button className=\"btn btn-primary\" onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </Navbar>\r\n      <Container className=\"p-4\">\r\n        {false && (\r\n          <Button onClick={handleWebcamToggle} className=\"btn btn-primary mb-4\">\r\n            {webcamLive ? \"Disconnect Webcam\" : \"Connect Webcam\"}\r\n          </Button>\r\n        )}\r\n        <Button onClick={handleOffer} className=\"btn btn-primary mb-4\">\r\n          {offerLive ? \"Stop Offer\" : \"Start Offer\"}\r\n        </Button>\r\n        {webcamLive && <RTCVideo ref={localVideo} username={name} />}\r\n        {webcamLive && <Meet live={offerLive} ref={locVideo} />}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// screens\r\nimport Login from \"./screen/Login\";\r\nimport Home from \"./screen/Home\";\r\n\r\nconst Navigator = () => {\r\n  const loggedIn = useSelector((state) => state.user.loggedIn);\r\n\r\n  if (!loggedIn) {\r\n    return <Login />;\r\n  }\r\n\r\n  return <Home />;\r\n};\r\n\r\nexport default Navigator;\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  loggedIn: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_REQUEST_SUCCESS:\r\n      return { ...state, name: action.payload.name, loggedIn: true };\r\n    case actionTypes.LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\n\r\nexport default combineReducers({ user });\r\n","import { applyMiddleware, createStore } from \"redux\";\r\n\r\n// store persist\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig = {\r\n  key: \"meet_root_storage\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst Store = createStore(persistedReducer, applyMiddleware(thunk));\r\n\r\nconst Persistor = persistStore(Store);\r\n\r\nexport { Store, Persistor };\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\n// components\r\nimport Navigator from \"./Navigator\";\r\n\r\n// store\r\nimport { Store, Persistor } from \"./redux/Store\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={Store}>\r\n      <PersistGate loading={null} persistor={Persistor}>\r\n        <Navigator />\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}